<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ChatMsgMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.ChatMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sendId" jdbcType="INTEGER" property="sendid" />
    <result column="reviceId" jdbcType="INTEGER" property="reviceid" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.model.ChatMsg">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sendId, reviceId, addtime, type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.demo.model.ChatMsgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chatmsg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.demo.model.ChatMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chatmsg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chatmsg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chatmsg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.ChatMsgExample">
    delete from chatmsg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.ChatMsg">
    insert into chatmsg (id, sendId, reviceId, 
      addtime, type, content
      )
    values (#{id,jdbcType=INTEGER}, #{sendid,jdbcType=INTEGER}, #{reviceid,jdbcType=INTEGER}, 
      #{addtime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.ChatMsg">
    insert into chatmsg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendid != null">
        sendId,
      </if>
      <if test="reviceid != null">
        reviceId,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sendid != null">
        #{sendid,jdbcType=INTEGER},
      </if>
      <if test="reviceid != null">
        #{reviceid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.ChatMsgExample" resultType="java.lang.Long">
    select count(*) from chatmsg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chatmsg
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sendid != null">
        sendId = #{record.sendid,jdbcType=INTEGER},
      </if>
      <if test="record.reviceid != null">
        reviceId = #{record.reviceid,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update chatmsg
    set id = #{record.id,jdbcType=INTEGER},
      sendId = #{record.sendid,jdbcType=INTEGER},
      reviceId = #{record.reviceid,jdbcType=INTEGER},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chatmsg
    set id = #{record.id,jdbcType=INTEGER},
      sendId = #{record.sendid,jdbcType=INTEGER},
      reviceId = #{record.reviceid,jdbcType=INTEGER},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.ChatMsg">
    update chatmsg
    <set>
      <if test="sendid != null">
        sendId = #{sendid,jdbcType=INTEGER},
      </if>
      <if test="reviceid != null">
        reviceId = #{reviceid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.ChatMsg">
    update chatmsg
    set sendId = #{sendid,jdbcType=INTEGER},
      reviceId = #{reviceid,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.ChatMsg">
    update chatmsg
    set sendId = #{sendid,jdbcType=INTEGER},
      reviceId = #{reviceid,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBySendId"  resultType="com.example.demo.model.ChatMsg">
    select * from chatmsg where sendId = #{arg0} and reviceId = #{arg1}
  </select>
</mapper>