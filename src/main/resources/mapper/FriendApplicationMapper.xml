<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.FriendApplicationMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.FriendApplication">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="application_id" jdbcType="INTEGER" property="applicationId"/>
        <result column="destination_id" jdbcType="INTEGER" property="destinationId"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, application_id, destination_id, state
  </sql>
    <select id="selectByExample" parameterType="com.example.demo.model.FriendApplicationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from friend_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_application
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friend_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.model.FriendApplicationExample">
        delete from friend_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.model.FriendApplication">
    insert into friend_application (id, application_id, destination_id, 
      state)
    values (#{id,jdbcType=INTEGER}, #{applicationId,jdbcType=INTEGER}, #{destinationId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.FriendApplication">
        insert into friend_application
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="applicationId != null">
                application_id,
            </if>
            <if test="destinationId != null">
                destination_id,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="applicationId != null">
                #{applicationId,jdbcType=INTEGER},
            </if>
            <if test="destinationId != null">
                #{destinationId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.model.FriendApplicationExample"
            resultType="java.lang.Long">
        select count(*) from friend_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update friend_application
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.applicationId != null">
                application_id = #{record.applicationId,jdbcType=INTEGER},
            </if>
            <if test="record.destinationId != null">
                destination_id = #{record.destinationId,jdbcType=INTEGER},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update friend_application
        set id = #{record.id,jdbcType=INTEGER},
        application_id = #{record.applicationId,jdbcType=INTEGER},
        destination_id = #{record.destinationId,jdbcType=INTEGER},
        state = #{record.state,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.FriendApplication">
        update friend_application
        <set>
            <if test="applicationId != null">
                application_id = #{applicationId,jdbcType=INTEGER},
            </if>
            <if test="destinationId != null">
                destination_id = #{destinationId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.FriendApplication">
    update friend_application
    set application_id = #{applicationId,jdbcType=INTEGER},
      destination_id = #{destinationId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="insertApplicationSingle" parameterType="com.example.demo.model.FriendApplication">
    insert ignore
    into friend_application (application_id, destination_id, state)
    select	#{applicationId}, #{destinationId}, #{state} FROM dual
	where
    not exists
   (select * from friend_application
    where application_id = #{applicationId} and destination_id = #{destinationId} and state != 2)
  </insert>
</mapper>
